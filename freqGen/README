This generates an array of values which map voltages to V/Oct frequencies.

The original code is linked on http://www.ginkosynthese.com/product/grains/

Due to variance in an individual Arduinos' frequency crystal it is somewhat likely that you will have to tune your arduino. I'm providing a somewhat clumsy but working solution to this by means of generating a voltage-to-octave frequency generator.

How you tune the Arduino is as follows:

Step one: Reset the main.c file to default
(the values in there are tuned to my personal quartz, they will not likely work for you)

- In the main.c file, set the two constants BASE_NOTE and BASE_INCR to their default values.
- Then recompile the file by calling 'make'.
- Call 'make write' to write a clean vOctTable.h file to the main directory.

If you now recompile the Arduino project and upload it to your chip you will have default tuning.
With a perfect frequency quartz, your VCO would already be in tune perfectly.

Test this by sending known voltages to it and checking the generated note, i.e. with a guitar tuner app for your smartphone.

If your module is out of tune, continue with...

Step two: Tune the base note C1
- Send a precise zero Volts signal to the V/Oct input.
- In the main.c file, change the value of BASE_NOTE up or down.
- Re-generate the vOctTable.h file.
- Recompile the Arduino project.

Rinse and repeat until the base note is in tune.

Now once again see if other notes are in tune or not. If you experience frequency drift between zero and five Volts then continue with...

Step three: Tune the frequency compensation
- In the main.c file, change the BASE_INCR value very slightly (from 2.0 to 1.95 or something small like that)
- Re-generate the vOctTable.h file.
- Recompile the Arduino project.

Now feed known voltages to the module and see if the frequency drift improves.
Rinse and repeat until the frequency drift is eliminated.

Voila, you now have a tuned granular oscillator.
